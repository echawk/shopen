#!/bin/sh

# shopen - a POSIX shell replacement for xdg-open
# Copyright (c) 2021, Ethan Hawk
#
# SPDX-License-Identifier: MIT

# Directories that contain desktop files
SYSTEM_DESKTOP_FILES_DIR=/usr/share/applications/
USER_DESKTOP_FILES_DIR=${XDG_DATA_HOME:-$HOME/.local/share}/applications/

# The standard configuration file for xdg-open
MIMEAPPSLIST=${XDG_CONFIG_DIR:-$HOME/.config}/mimeapps.list

# These files are tab separated value files, with the first collumn
# being the regular expression, and the second column being the command
# to run. '%M' in the second column is replaced with '$f'.
# This is so that commands can be arbitrarily complex.
REGEXRULESFILE=${XDG_CONFIG_DIR:-$HOME/.config}/shopen/rerules.tsv
MIMERULESFILE=${XDG_CONFIG_DIR:-$HOME/.config}/shopen/mimerules.tsv
# depends: file, grep, cut, sed

for f in "$@" ; do
  MIME_TYPE="$(file -bi "$f" | cut -d';' -f1)"
  # $f in base64 - this is to ensure that files can use any character
  fB64="$(printf "%s" "$f" | base64 -w 0)"
  # if the MIMERULESFILE exists
  [ -e "$MIMERULESFILE" ] && {
  # for every regex rule that is defined the mime rules file
  # shellcheck disable=SC2013
  for mirule in $(grep -v -E "(^#|^$)"  "$MIMERULESFILE" | cut -d'	' -f1) ; do
    # if we have a match
    if printf "%s" "$MIME_TYPE" | grep -q -E "$mirule" ; then
      # construct the execcmd ; decode fB64 at runtime
      execcmd=$(grep -F "$mirule" "$MIMERULESFILE" \
        | cut -d'	' -f2 \
        | sed \
        "s~%M~\"\$(echo $fB64 | base64 -d)\"~g")
      break
    fi
  done
  }
  # if execcmd wasn't defined above
  [ -z "$execcmd" ] && {
  WANTDESKTOPFILE=""
  DESKTOPFILE=""
  # if the mimetype is mentioned in the mimeapps.list
  if grep -q "$MIME_TYPE" "$MIMEAPPSLIST" ; then
    # set our wanted desktop file to be what's specified MIMEAPPSLIST
    WANTDESKTOPFILE=$(grep "$MIME_TYPE" "$MIMEAPPSLIST" | cut -d'=' -f2)
  fi

  # if we have a desktop file to search for
  [ -n "$WANTDESKTOPFILE" ] && {
  for DESKDIR in $USER_DESKTOP_FILES_DIR $SYSTEM_DESKTOP_FILES_DIR ; do
    for deskf in "$DESKDIR"* ; do
      # if we found the desktop file, save the location
      # and break the loop. The substring operation here
      # get's the last field of a path:
      # ie : /path/to/file.extention -> file.extension
      if [ "${deskf##*/}" = "$WANTDESKTOPFILE" ] ; then
        DESKTOPFILE="$deskf"
        break 2
    fi
    done
  done
  }

  # if we still havent found the proper desktop file, we now need to search
  # for a desktop file that can handle the file's mimetype
  [ -z "$DESKTOPFILE" ] && {
  # for each directory that desktop files exist
  for DESKDIR in $USER_DESKTOP_FILES_DIR $SYSTEM_DESKTOP_FILES_DIR ; do
    # for every desktop file in those directories
    for deskf in "$DESKDIR"* ; do
      # if the desktop file contains the mimetype
      if grep -q "$MIME_TYPE" "$deskf" ; then
        # set the desktop file to be our matched one
        DESKTOPFILE="$deskf"
        break 2
      fi
    done
  done
  }
  # Only construct the execcmd if DESKTOPFILE gets defined
  [ -n "$DESKTOPFILE" ] && {
  # open the file according to how the desktop file specifies; we replace
  # the equal sign with a tilde because base64 uses equal signs for padding
  execcmd="$(grep "^Exec=" "$DESKTOPFILE" \
    | tr '=' '~' \
    | sed \
    "s~%[fFuU]~\"\$(echo $fB64 | base64 -d)\"~")"
  # use a substring command to get just the command
  # ie : Exec~command --with-flags -> command --with-flags
  execcmd="${execcmd#*~}"
  }
  }

  # if we haven't created an execcmd and REGEXRULESFILE exists
  [ -z "$execcmd" ] && [ -e "$REGEXRULESFILE" ] && {
  # for every regex rule that is defined in the regex rules file
  # shellcheck disable=SC2013
  for rerule in $(grep -v -E "(^#|^$)" "$REGEXRULESFILE" | cut -d'	' -f1) ; do
    # if we get a match on the input to shopen
    if printf "%s" "$f" | grep -q -E "$rerule" ; then
      # create our exec command using the second field in the TSV
      execcmd="$(grep -F "$rerule" "$REGEXRULESFILE" \
        | cut -d'	' -f2 \
        | sed \
        "s~%M~\"\$(echo $fB64 | base64 -d)\"~g")"
      break
    fi
  done
  }
  # we use 'sh' here instead of 'exec' because shell is much more powerful
  # than 'exec' when it comes to complex commands. This is to allow people
  # to write full fleged shell scripts in their configuration files for shopen.
  sh -c "$execcmd" &
  # here we unset execcmd, because it gets generated on a per-file basis
  unset execcmd
done
wait
